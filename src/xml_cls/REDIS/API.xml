<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2.1 (Build 803U)" ts="2017-06-28 02:14:25">
<Class name="REDIS.API">
<Super>%Persistent</Super>
<TimeChanged>64462,8065.552516</TimeChanged>
<TimeCreated>64461,58000.571524</TimeCreated>

<Method name="Decr">
<ClassMethod>1</ClassMethod>
<FormalSpec>varName:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(varName)>0){
		set textualListCommand = ##class(REDIS.API).ConvertToList(varName) 	
	 	w ##class(REDIS.Commands.DECR).RunCommand(textualListCommand)
 	}
]]></Implementation>
</Method>

<Method name="Incr">
<ClassMethod>1</ClassMethod>
<FormalSpec>varName:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(varName)>0){
		set textualListCommand = ##class(REDIS.API).ConvertToList(varName) 	
	 	w ##class(REDIS.Commands.INCR).RunCommand(textualListCommand)
 	}
]]></Implementation>
</Method>

<Method name="Del">
<ClassMethod>1</ClassMethod>
<FormalSpec>varName:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(varName)>0){
	 	set textualListCommand = ##class(REDIS.API).ConvertToList(varName)
	 	w ##class(REDIS.Commands.DEL).RunCommand(textualListCommand)
 	}
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec>varName:%String,value:%String,option:%String,time:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(varName)>0){
		if ($DATA(option)>0){
				if ($DATA(time)>0){
					set textualListCommand = ##class(REDIS.API).ConvertToList(varName,value,option,time)
				}else{
					set textualListCommand = ##class(REDIS.API).ConvertToList(varName,value,option)
				}
	 	}else{
			set textualListCommand = ##class(REDIS.API).ConvertToList(varName,value) 	
	 	}
	 	w ##class(REDIS.Commands.SET).RunCommand(textualListCommand)
 	}
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec>varName:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(varName)>0){
	 	set textualListCommand = ##class(REDIS.API).ConvertToList(varName)
	 	w ##class(REDIS.Commands.GET).RunCommand(textualListCommand)
 	}
]]></Implementation>
</Method>

<Method name="Help">
<ClassMethod>1</ClassMethod>
<FormalSpec>commandName:%String</FormalSpec>
<Implementation><![CDATA[
	if ($DATA(commandName)>0){
	 	set textualListCommand = ##class(REDIS.API).ConvertToList(commandName)
 	}else{
 		set textualListCommand = $LISTBUILD("HELP")
 	}
 	w ##class(REDIS.Commands.HELP).RunCommand(textualListCommand)
]]></Implementation>
</Method>

<Method name="ConvertToList">
<Description>
this ClassMethod should be called in every command above to
transfer from redis function arguments to textual list command</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>args...:%String</FormalSpec>
<ReturnType>%List</ReturnType>
<Implementation><![CDATA[
	
	set textualCommand = ""
	
	 For i = 1 : 1 : $GET(args, 0)
	 {
	     if ($DATA(args(i))>0){
	     	set textualCommand = textualCommand_" "_$GET(args(i), "<NULL>")
	     }

	 }
	 
	return $LISTFROMSTRING(textualCommand," ")
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^REDIS.APID</DataLocation>
<DefaultData>APIDefaultData</DefaultData>
<IdLocation>^REDIS.APID</IdLocation>
<IndexLocation>^REDIS.APII</IndexLocation>
<StreamLocation>^REDIS.APIS</StreamLocation>
<Data name="APIDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>

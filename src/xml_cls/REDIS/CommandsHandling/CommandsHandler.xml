<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2.1 (Build 803U)" ts="2017-06-28 02:14:26">
<Class name="REDIS.CommandsHandling.CommandsHandler">
<Super>%Persistent</Super>
<TimeChanged>64462,8066.03686</TimeChanged>
<TimeCreated>64461,59306.389516</TimeCreated>

<Method name="SolveExpression">
<Description>
Method for calling command that is part of cmdPipeline list, where first is needed
 to resolve if expression is correct as far as command with parameters count</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>cmdPipeline:%List</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result = ""
	set classFunction = "REDIS.Commands."_$LIST(cmdPipeline,1)
	
	
	/// GET ALL COMPILED CLASSES FROM PACKAGE: Commands 	
	&sql(select LIST(id) into :classesList from %Dictionary.CompiledClass where
	id LIKE 'REDIS.Commands.%' AND id = :classFunction)
	
	set classesList = $LISTFROMSTRING(classesList)
	
	if ($LISTLENGTH(classesList) '= 0){
		set maxParameters = $PARAMETER(classFunction,"maxParameters")
		///test number of parameters
		if (($LISTLENGTH(cmdPipeline)-1) > maxParameters){
		
			set result = ##class(REDIS.Terminal.ErrorHandler).ParamExceeded(cmdPipeline, maxParameters)
		
		}else{
			/// function exist and call it
			set result = $CLASSMETHOD(classFunction,"RunCommand",cmdPipeline)
		}
	}
	else{
		// function undefined
		set result = ##class(REDIS.Terminal.ErrorHandler).UndefinedFunction(cmdPipeline, 1)
	}
              
	return result
]]></Implementation>
</Method>

<Method name="WatchExpiration">
<Description>
Class Method for one job to watch on data expiration</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	while($Data(^redisWork)){
		HANG 1
		if ($DATA(^data)){
			// TODO - start cycle until there is variable that should not still expire
			// TODO 
		}
		// TODO 
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^REDIS.CommDACC.CommandsHan418BD</DataLocation>
<DefaultData>CommandsHandlerDefaultData</DefaultData>
<IdLocation>^REDIS.CommDACC.CommandsHan418BD</IdLocation>
<IndexLocation>^REDIS.CommDACC.CommandsHan418BI</IndexLocation>
<StreamLocation>^REDIS.CommDACC.CommandsHan418BS</StreamLocation>
<Data name="CommandsHandlerDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>

<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2.1 (Build 803U)" ts="2017-06-28 02:14:26">
<Class name="REDIS.Terminal.StringParser">
<Super>%Persistent</Super>
<TimeChanged>64462,8066.438451</TimeChanged>
<TimeCreated>64316,47642.877398</TimeCreated>

<Method name="decodeCommand">
<Description>
Method used for creating List from given data as String, where every not important
white characters are removed from future list and only clear list with commnad and
parameters will remain. The data contains common data input inputed from user for
work with REDIS-CACHÃ‰ interface.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>data:%String</FormalSpec>
<ReturnType>%List</ReturnType>
<Implementation><![CDATA[
	set List = $ListFromString(data," ")
	
	/// just preparing our new list with elements without spaces
	set newList = $ListBuild()
	
	set index = 1
	set newListIndex = 1
	
	/// copy only input with data to new list and upper case only funcitons
	while ((index-1) '= $LISTLENGTH(List)){
		if ($LIST(List,index) '= ""){
			if (newListIndex = 1){
				set $LIST(newList,newListIndex) = $ZCONVERT($LIST(List,index),"U")
			}
			elseif ((newListIndex = 2) && ($LIST(newList,1) = "HELP")){
				set $LIST(newList,newListIndex) = $ZCONVERT($LIST(List,index),"U")
			}else{
				set $LIST(newList,newListIndex) = $LIST(List,index)
			}
			set newListIndex = $increment(newListIndex)
		}
		set index = $increment(index)
	}
	
	return newList
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^REDIS.Terminal.StringParserD</DataLocation>
<DefaultData>StringParserDefaultData</DefaultData>
<IdLocation>^REDIS.Terminal.StringParserD</IdLocation>
<IndexLocation>^REDIS.Terminal.StringParserI</IndexLocation>
<StreamLocation>^REDIS.Terminal.StringParserS</StreamLocation>
<Data name="StringParserDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
